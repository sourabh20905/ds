#include<iostream>
using namespace std;
class node{
        public:
        int data;
        node* next;
        node* previous;
        node(int val){
            data=val;
            next=NULL;
            previous=NULL;

        }
};
void insertathead(node* &head, int val)
{
    node* n=new node(val);
    n->next=head;
    if(head!=NULL){
        head->previous=n;
        
    }
    head=n;


}
void insertattail(node * &head,int val ){
    node* n=new node(val);
    
    if(head==NULL){
        insertathead(head,val);
        return ;
    }
    
    node* temp=head;
    while(temp->next!=NULL){
        temp=temp->next;
    }
    temp->next=n;
    n->previous=temp;
}
void display(node* head){
    node* temp=head;
    while(temp!=NULL){
        cout<<temp->data<<" ";
        temp=temp->next;
    }
    cout<<endl;
}
int length ( node* head){
    int l=1;
    node* temp=head;
    while(temp->next!=NULL){
        l++;
        temp=temp->next;

    }
    return l;
}

node* kappend(node* &head,int k){
      node* tail=head;
      node* newtail;
      node* newhead;
      int l=length(head);
      int count=1;
      while(tail->next!=NULL){
          if(count==l-k){
              newtail=tail;
          }
          if(count==l-k+1){
              newhead=tail;
          }
            tail=tail->next;
            count++;
          
      }
      newtail->next=NULL;
      tail->next=head;
      return newhead;
}
int main(){
    node* head=NULL;
    insertattail( head, 1);
    insertattail( head, 2);
    insertattail( head, 3);
    insertattail(head,4);
    insertattail(head,5);
    insertattail(head,6);

    display(head);
    node* newhead=kappend(head,3);
    display(newhead);
    
   
}
